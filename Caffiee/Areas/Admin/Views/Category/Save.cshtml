@model Cf_Viewmodels.CategoryVm
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
    ViewBag.Title = "Create Category";
}

<h2>Create Category</h2>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Save" enctype="multipart/form-data">
            <div class="form-group">
                <label asp-for="CategoryName" class="control-label"></label>
                <input asp-for="CategoryName" class="form-control" />
                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Imge" class="control-label"></label>
                <input type="file" asp-for="Imge" class="form-control" multiple onchange="previewImages(event)" />
            </div>
            <div class="form-group">
                <div id="imagePreviewcat" class="row"></div>
            </div>
            <div class="form-group">
                <div class="button-group">
                    <button type="submit" id="savedata" class="btn btn-primary">
                        @if (  Model!=null)
                        {
                            @:Update
                        }
                        else
                        {
                            @:Add New
                        }
                    </button>
                </div>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function previewImages(event) {
            var files = event.target.files;
            var preview = document.getElementById('imagePreviewcat');
            preview.innerHTML = ''; // Clear the preview container

            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var reader = new FileReader();

                reader.onload = function (e) {
                    var imgDiv = document.createElement('div');
                    imgDiv.classList.add('col-md-3');

                    var img = document.createElement('img');
                    img.src = e.target.result;
                    img.classList.add('img-thumbnail');
                    img.style.maxWidth = '150px';
                    img.style.margin = '10px';

                    var delButton = document.createElement('button');
                    delButton.textContent = 'Delete';
                    delButton.classList.add('btn', 'btn-danger', 'btn-sm');
                    delButton.style.display = 'block';
                    delButton.style.margin = '10px';
                    delButton.onclick = function () {
                        imgDiv.remove();
                        // Reset file input field
                        document.querySelector('input[type="file"]').value = '';
                    };

                    imgDiv.appendChild(img);
                    imgDiv.appendChild(delButton);
                    preview.appendChild(imgDiv);
                };

                reader.readAsDataURL(file);
            }
        }
    </script>

     @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
